@model Talent.Topper.UI.Models.BranchMasterEntity
@{
    ViewBag.Title = "Talent Topper: Branch Creation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<u><h4 style="text-align:center;">Create Branch</h4></u>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model=>model.id)
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (ViewBag.SaveStatus != null && ViewBag.SaveStatus == true)
        {
            <div class="alert alert-success">
                <strong>Success!</strong> Company has been successfully created.
            </div>
        }
        @if (ViewBag.SaveStatus != null && ViewBag.SaveStatus == false)
        {
            <div class="alert alert-danger">
                <strong>Failure!</strong> Unable to save data into repository.
            </div>
        }

        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BranchAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchMobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BranchMobileNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchMobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchPhoneNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BranchPhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchPhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchEmailID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BranchEmailID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchEmailID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">

                        @Html.DropDownListFor(model => model.StateID, new SelectList(ViewBag.StateByCountryList ,"ID","StateName"), "-- Select State --", new { @id = "StateID", @class = "form-control" })
                         @*@Html.DropDownListFor(model => model.StateID, (IEnumerable<SelectListItem>)ViewBag.Campaign)*@
                        @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">

                        @Html.DropDownListFor(model => model.CountryID, new SelectList(ViewBag.CountryList, "ID", "CountryName"), "-- Select Country --", new { @id = "CountryID", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="file" name="ImageFile" required /> 
                    </div>
                </div>

            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-7 col-md-5">
                        <input type="submit" value="Save" class="btn  btn-primary" />
                        @Html.ActionLink("Reset", "Reset", "Company", new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        </div>

    </div>
}


@Scripts.Render("~/bundles/jquery")
<script type="text/jscript">
    $(function () {
        $('#CountryID').change(function () {
            $.getJSON('/StateByCountry/StateByCountryList/' + $('#CountryID').val(), function (data) {
                var items = '<option>-- Select State --</option>';
                $.each(data, function (i, state) {                    
                    items += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                });
                $('#StateID').html(items);
            });
        });
    });
</script>