@model Talent.Topper.UI.Models.CompanyEntity

@{
    ViewBag.Title = "Talent Topper: Company Creation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<u><h4 style="text-align:center;">Create Company</h4></u>


@using (Html.BeginForm("Save", "Company"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=>model.ID)
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (ViewBag.SaveStatus != null && ViewBag.SaveStatus == true)
        {
            <div class="alert alert-success">
                <strong>Success!</strong> Company has been successfully created.
            </div>
        }
        @if (ViewBag.SaveStatus != null && ViewBag.SaveStatus == false)
        {
            <div class="alert alert-danger">
                <strong>Failure!</strong> Unable to save data into repository.
            </div>
        }



        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.addressline, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.addressline, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.addressline, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            @*<div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CountryID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.WebsiteUrl, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.WebsiteUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WebsiteUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LogoPath, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LogoPath, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LogoPath, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CEOName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CEOName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CEOName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">                     

                        @Html.DropDownListFor(model => model.CountryID, new SelectList(ViewBag.CountryList, "ID", "NAME"), "-- Select Country --", new { @id = "CountryID", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*@Html.EditorFor(model => model.StateID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })*@

                        @Html.DropDownListFor(model => model.StateID, new SelectList(ViewBag.StateByCountryList, "ID", "StateName"), "-- Select State --", new { @id = "StateID", @class = "form-control" })                   
                        @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>

        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanyType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.PasswordFor(model => model.Password, new { id = "pbPassword", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">

            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-7 col-md-5">
                        <input type="submit" value="Save" class="btn  btn-primary" />
                        @Html.ActionLink("Reset", "Reset", "Company", new { @class = "btn btn-default" })

                    </div>
                </div>
            </div>
        </div>

    </div>
}

@Scripts.Render("~/bundles/jquery")
<script type="text/jscript">
    $(function () {      
        $('#CountryID').change(function () {
            var StateID = $('#StateID');
            StateID.empty();
            StateID.append($("<option></option>").val('').html('Please wait ...'));

           
            $.ajax({
                url: 'http://localhost:64243/api/getStateList/' + $('#CountryID').val(),
                type: 'GET',
                dataType: 'json',
                data: { },
                success: function (d) {

                    StateID.empty(); // Clear the please wait  
                    StateID.append($("<option></option>").val('').html('Select State'));
                    $.each(d, function (i, states) {
                        StateID.append($("<option></option>").val(states.ID).html(states.NAME));
                    });
                },
                error: function () {
                    alert('Error!');
                }
            });

            //$.getJSON('http://localhost:64243/api/getStateList/' + $('#CountryID').val(), function (data) {
            //    var items = '<option>-- Select State --</option>';
            //    $.each(data, function (i, state) {
            //        items += "<option value='" + state.ID + "'>" + state.NAME + "</option>";
            //    });
            //    $('#StateID').html(items);
            //});
        });
    });
</script>